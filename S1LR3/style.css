 .menu a { 
  color:  black;
  text-decoration: none;/*убираем подчеркивание текста ссылок*/
  display: block;  /*Все элементы на этом уровне начинаются с новой строки (вертикально) и, если не указано иное, растягиваются до ширины своего контейнера. Элементы прилегают вплотную друг к другу*/
  text-align: center;
  padding: 0 50px; /*внутренние отступы/поля со всех сторон элемента*/
  height: 40px;
  line-height: 40px; /*величину пространства между строками*/
  transition: all .5s;
   }

.menu a:hover{
  background: #DCDCDC;
  border-radius: 10px; 
  
}

.menu li {
  list-style: none;  /*устанавливает все свойства списка в одном объявлении, у него нет маркера*/
  float:left; /*Размещаем список горизонтально для реализации меню*/
  margin-right:3px; /*Добавляем отступ у пунктов меню*/

}
.m{  padding-top: 25px; } /*расстояние между верхним внутренним краем рамки элемента и его содержимым*/
.menu1 a { 
  color:  black;
  text-decoration: none;/*убираем подчеркивание текста ссылок*/
  transition: all .5s;
 padding: 10 70px;
   }
.menu1 a:hover{
  background: #DCDCDC;
  border-radius: 10px; 
  
}
.menu1 ul{
  position: absolute; /*Элемент исчезает с того места, где он должен быть и позиционируется заново*/
  left: 0;
  top: 100%; /* высота дочернего элемента будет такой же, как и ширина родительского элемента, поскольку мы устанавливаем padding-top: 100%*/
  display: none; /*элемент становится невидимым*/
  padding: 0;
}
.menu1 li {
  list-style: none; /*устанавливает все свойства списка в одном объявлении, у него нет маркера*/
  float:left; /*Размещаем список горизонтально для реализации меню*/
  margin-right:90px; /*Добавляем отступ у пунктов меню*/
  margin-left: 60px;
}
.s{
  font size: 20px; }
 {box-sizing: border-box;} /*Свойства ширины и высоты включают содержание, внутренний отступ и границы, но не включают внешний отступ*/
form {
  position: relative; /*Относительное позиционирование сдвигает элемент относительно его обычного положения.*/
  width: 1500px;
  margin: 0 auto; /*определяющая верхний и нижний внешние отступы равными 0, и автоматическое определение ширины для левого и правого внешних отступов*/
  background: #fff;
 /* border-style:solid; По умолчанию рамки всегда отрисовываются поверх фона элемента, фон распространяется до внешнего края элемента Определяет сплошную границу*/
  border-color:#DCDCDC;
}
input {
  outline: none; /*Свойство определяет стиль контура элемента. Значения:• none — не отображает контура*/
  background: transparent; /*полностью прозрачный цвет*/
   border-color:#DCDCDC;
   border-radius: 5px;
}
button {
  border: none; /*Не отображает границу и ее толщина (border-width) задается нулевой.*/
  outline: none; /*Свойство определяет стиль контура элемента. Значения:• none — не отображает контура*/
  background: transparent; /*полностью прозрачный цвет*/
   border-color:#DCDCDC;
}
.l{
  border-bottom: 4px solid #DCDCDC; /*линия внизу*/
}



.center {
    display: flex;  /*для блокового отображения;*/
    align-items: center; /*Свойство align-items выравнивание элементов вдоль поперечной оси. Применяется к родительскому элементу для flex блоков. center Блоки стоят по центру поперечной оси*/
    justify-content: center; /*Выравнивание элементов по центру. элементы вне зависимости от их ширины имеют горизонтальное позиционирование по центру родительского контейнера*/
}



.gap10 {
    display: flex; /*для блокового отображения;*/
    gap: 10px; /*Свойство gap устанавливает промежутки между строками и столбцами сетки*/
}



.bBtn {
    height: 40px;
    color: white;
    background-color: blue;
    width: 180px;
    display: flex;  /*для блокового отображения;*/
    justify-content: center; /*Выравнивание элементов по центру. элементы вне зависимости от их ширины имеют горизонтальное позиционирование по центру родительского контейнера*/
    align-items: center; /*Свойство align-items выравнивание элементов вдоль поперечной оси. Применяется к родительскому элементу для flex блоков. center Блоки стоят по центру поперечной оси*/
    border-radius: 5px;
}
.rBtn {
    height: 40px;
    color: white;
    background-color: red;
    width: 180px;
    display: flex;  /*для блокового отображения;*/
    justify-content: center; /*Выравнивание элементов по центру. элементы вне зависимости от их ширины имеют горизонтальное позиционирование по центру родительского контейнера*/
    align-items: center; /*Свойство align-items выравнивание элементов вдоль поперечной оси. Применяется к родительскому элементу для flex блоков. center Блоки стоят по центру поперечной оси*/
    border-radius: 5px;
}
.bBtn, .rBtn:hover {
    cursor: pointer; /*появление руки при наведении на элемент*/
}